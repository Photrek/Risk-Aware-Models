# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import data_generator_pb2 as data__generator__pb2


class ServiceDefinitionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GenerateImage = channel.unary_unary(
        '/data_generator.ServiceDefinition/GenerateImage',
        request_serializer=data__generator__pb2.Input.SerializeToString,
        response_deserializer=data__generator__pb2.StringResponse.FromString,
        )


class ServiceDefinitionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GenerateImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServiceDefinitionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GenerateImage': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateImage,
          request_deserializer=data__generator__pb2.Input.FromString,
          response_serializer=data__generator__pb2.StringResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'data_generator.ServiceDefinition', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
